name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Checkout the code from the repo
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Visual Studio
    - name: Set up MSBuild
      uses: microsoft/setup-msbuild@v1

    # Build the emulator project and output to a specific directory
    - name: Build Emulator
      run: |
        msbuild /p:Configuration=Release /p:Platform=x64 /p:OutDir=./output/ Z80-Emu.sln

    # Zip the build output
    - name: Zip build output
      run: Compress-Archive -Path ./output/* -DestinationPath ./output/Z80-Emu.zip

    # Archive the zipped build artifact
    - name: Archive Build
      uses: actions/upload-artifact@v3
      with:
        name: emulator-build
        path: ./output/Z80-Emu.zip
        retention-days: 7

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    # Create a release when the build succeeds, using the latest commit message as the release body
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Z80 Emulator v1.0.${{ github.run_number }}
        body: ${{ github.event.head_commit.message }} # Fetch the latest commit message for release body
        draft: false
        prerelease: false

    # Upload the build artifact to the release
    - name: Upload Build to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output/Z80-Emu.zip
        asset_name: Z80-Emu.zip
        asset_content_type: application/octet-stream