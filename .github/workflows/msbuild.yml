name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Checkout the code from the repo
    - uses: actions/checkout@v4

    # Add MSBuild to PATH
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    # Restore NuGet packages
    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    # Build the solution
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    # Zip the build output
    - name: Zip build output
      run: |
        Compress-Archive -Path ./x64/${{env.BUILD_CONFIGURATION}}/* -DestinationPath ./x64/${{env.BUILD_CONFIGURATION}}/Z80-Emu.zip

    # Upload the zipped build artifact for archiving
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: ./x64/${{env.BUILD_CONFIGURATION}}/Z80-Emu.zip

  release:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    steps:
    # Create a new GitHub release using the latest commit message as the release body
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}  # Use the PAT instead of the default GITHUB_TOKEN
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Release v1.0.${{ github.run_number }}
        body: ${{ github.event.head_commit.message }}  # Use the latest commit message for release body
        draft: false
        prerelease: false

    # Upload the ZIP artifact to the release
    - name: Upload Build to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}  # Use the PAT here as well
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./x64/${{env.BUILD_CONFIGURATION}}/Z80-Emu.zip
        asset_name: Z80-Emu.zip
        asset_content_type: application/zip