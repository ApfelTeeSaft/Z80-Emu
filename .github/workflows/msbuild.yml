name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SOLUTION_FILE_PATH: .
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Checkout the code from the repo
    - uses: actions/checkout@v4

    # Add MSBuild to PATH
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    # Restore NuGet packages
    - name: Restore NuGet packages
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: nuget restore ${{ env.SOLUTION_FILE_PATH }}

    # Build the solution
    - name: Build
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} ${{ env.SOLUTION_FILE_PATH }}

    # Zip the build output
    - name: Zip build output
      run: |
        $outputPath = "${{ env.GITHUB_WORKSPACE }}\x64\${{ env.BUILD_CONFIGURATION }}"
        if (Test-Path -Path $outputPath) {
          Compress-Archive -Path "$outputPath\*" -DestinationPath "$outputPath\Z80-Emu.zip"
        } else {
          Write-Host "Directory $outputPath does not exist"
        }

    # Debug: List the directory contents to check if the file exists
    - name: List directory contents
      run: |
        dir "${{ env.GITHUB_WORKSPACE }}\x64\${{ env.BUILD_CONFIGURATION }}"

    # Upload the zipped build artifact for archiving
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: ${{ env.GITHUB_WORKSPACE }}\x64\${{ env.BUILD_CONFIGURATION }}\Z80-Emu.zip

  release:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    steps:
    # Create a new GitHub release using the latest commit message as the release body
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Release v1.0.${{ github.run_number }}
        body: ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false

    # Upload the ZIP artifact to the release
    - name: Upload Build to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.GITHUB_WORKSPACE }}\x64\${{ env.BUILD_CONFIGURATION }}\Z80-Emu.zip
        asset_name: Z80-Emu.zip
        asset_content_type: application/zip